{"version":3,"sources":["components/Login.js","components/Signup.js","App.js","serviceWorker.js","index.js"],"names":["Login","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","matches","onSubmit","values","resetForm","setTimeout","alert","JSON","stringify","className","handleSubmit","name","id","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","type","to","Signup","firstName","lastName","passwordConfirmation","oneOf","useEffect","document","body","style","background","Home","href","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be59c632.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"required\"),\r\n      password: Yup.string()\r\n        .required(\"No password provided.\")\r\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      setTimeout(() => {\r\n        alert(JSON.stringify(values, null, 2));\r\n        resetForm();\r\n      }, 500);\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"login-page\">\r\n      <form className=\"form\" onSubmit={formik.handleSubmit}>\r\n        <h1> Login </h1>\r\n        <div className=\"input-box\">\r\n          <input\r\n            className=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.email}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"has-error\"> {formik.errors.email} </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.password}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"has-error\"> {formik.errors.password} </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Login\" className=\"btn\" />\r\n\r\n        <div className=\"bottom-text\">\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"/signup\">\r\n            {\" \"}\r\n            <a>Sign up</a>{\" \"}\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Signup = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string()\r\n        .min(3, \"Name must be 3 characters at least\")\r\n        .required(\"required\"),\r\n      lastName: Yup.string()\r\n        .min(3, \"Name must be 3 characters at least\")\r\n        .required(\"required\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"required\"),\r\n      password: Yup.string()\r\n        .required(\"No password provided.\")\r\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\r\n      passwordConfirmation: Yup.string().oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        \"Passwords must match\"\r\n      )\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      setTimeout(() => {\r\n        alert(JSON.stringify(values, null, 2));\r\n        resetForm();\r\n      }, 500);\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    document.body.style.background =\r\n      \"linear-gradient(120deg, #4568dc, #b06ab3)\";\r\n    return () => {\r\n      document.body.style.background =\r\n        \"linear-gradient(120deg, #ff5e62, #ff9966)\";\r\n    };\r\n  });\r\n  return (\r\n    <div className=\"signup-page\">\r\n      <form className=\"form-signup\" onSubmit={formik.handleSubmit}>\r\n        <h1> Signup </h1>\r\n        <div className=\"input-box\">\r\n          <input\r\n            className=\"firstName\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.firstName}\r\n          />\r\n          {formik.touched.firstName && formik.errors.firstName ? (\r\n            <div className=\"has-error\"> {formik.errors.firstName} </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            className=\"lastName\"\r\n            name=\"lastName\"\r\n            id=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.lastName}\r\n          />\r\n          {formik.touched.lastName && formik.errors.lastName ? (\r\n            <div className=\"has-error\"> {formik.errors.lastName} </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            className=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.email}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"has-error\"> {formik.errors.email} </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.password}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"has-error\"> {formik.errors.password} </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"passwordConfirmation\"\r\n            id=\"passwordConfirmation\"\r\n            placeholder=\"Enter matching password\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.passwordConfirmation}\r\n          />\r\n          {formik.touched.passwordConfirmation &&\r\n          formik.errors.passwordConfirmation ? (\r\n            <div className=\"has-error\">\r\n              {\" \"}\r\n              {formik.errors.passwordConfirmation}{\" \"}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Signup\" className=\"btn\" />\r\n\r\n        <div className=\"bottom-text\">\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/login\">\r\n            {\" \"}\r\n            <a> Login</a>{\" \"}\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"main-page\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n        </Switch>\n        {/* <Login />\n        <Signup /> */}\n      </div>\n    </Router>\n  );\n}\n\n// home component just to make a nice navigation for the different pages ( I am being lazy :p )\nconst Home = () => (\n  <div className=\"home\">\n    <h1> Click to go to the desired page</h1>\n    <div className=\"row\">\n      <div className=\"col\" id=\"col1\">\n        {\" \"}\n        <Link to=\"/login\">\n          {\" \"}\n          <a href=\"#\">Login</a>{\" \"}\n        </Link>\n      </div>\n      <div className=\"col\" id=\"col2\">\n        <Link to=\"/signup\">\n          {\" \"}\n          <a href=\"#\">Signup</a>{\" \"}\n        </Link>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}